<?php

/**
 * This is the model base class for the table "Usuarios".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Usuarios".
 *
 * Columns in table "Usuarios" available as properties of the model,
 * followed by relations of table "Usuarios" available as properties of the model.
 *
 * @property integer $idUsuario
 * @property string $nome
 * @property string $sexo
 * @property string $nascimento
 * @property string $email
 * @property string $login
 * @property string $telefone
 * @property string $senha
 * @property string $criacao
 * @property string $modificacao
 *
 * @property Tarefas[] $tarefas
 */
abstract class BaseUsuarios extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Usuarios';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UsuÃ¡rio|UsuÃ¡rios', $n);
	}

	public static function representingColumn() {
		return 'nome';
	}

	public function rules() {
		return array(
			array('nome, sexo, email, login, telefone, senha', 'required'),
			array('nome', 'length', 'max'=>150),
			array('sexo', 'length', 'max'=>10),
			array('email, login, senha', 'length', 'max'=>128),
			array('email, login', 'unique'),
			array('telefone', 'length', 'max'=>30),
			array('nascimento, criacao, modificacao', 'safe'),
			array('nascimento, criacao, modificacao', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idUsuario, nome, sexo, nascimento, email, login, telefone, senha, criacao, modificacao', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'tarefases' => array(self::HAS_MANY, 'Tarefas', 'usuario'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idUsuario', $this->idUsuario);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('sexo', $this->sexo, true);
		$criteria->compare('nascimento', $this->nascimento, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('login', $this->login, true);
		$criteria->compare('telefone', $this->telefone, true);
		$criteria->compare('senha', $this->senha, true);
		$criteria->compare('criacao', $this->criacao, true);
		$criteria->compare('modificacao', $this->modificacao, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}